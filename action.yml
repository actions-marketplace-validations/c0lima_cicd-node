name: "nodejs cicd azure"
description: | 
  "This action builds, test and deploy a Node.js app to Azure.
  Requires an Azure service principal with necessary permissions."

branding:
  icon: 'shield'
  color: 'blue'
inputs:
  node-version:
    description: 'The version of Node.js to use for building and testing.'
    required: false
    default: '14.x'
  app-name:
    description: 'The name of the Azure Web App to deploy to.'
    required: true
  package:
    description: 'The path to the application package to deploy.'
    required: true
  environment:
    description: 'The name of the environment to deploy to.'
    required: false
    default: 'staging'
  service-principal:
    description: 'The Azure service principal to use for authentication.'
    required: true
  tenant-id:
    description: 'The Azure Active Directory tenant ID associated with the service principal.'
    required: true
  subscription-id:
    description: 'The Azure subscription ID associated with the service principal.'
    required: true
  custom-test-command:
    description: 'The custom command to run for testing the application.'
    required: false
    default: 'npm test'
outputs:
  deployment-url:
    description: 'The URL of the deployed application.'
    value: ${{ steps.deploy-to-azure.outputs.webapp-url }}
runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v2
    - name: Build and test
      id: build-and-test
      uses: actions/setup-node@v2
      with:
        node-version: ${{ inputs.node-version }}
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install dependencies
      shell: bash
      run: npm ci
    - name: Run tests
      shell: bash
      run: ${{ inputs.custom-test-command }}
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: test-results.xml
    - name: Setup Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ inputs.service-principal }}
        tenant-id: ${{ inputs.tenant-id }}
        subscription-id: ${{ inputs.subscription-id }}
    - name: Deploy to Azure
      id: deploy-to-azure
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ inputs.app-name }}-${{ inputs.environment }}
        package: ${{ inputs.package }}
        slot-name: ${{ inputs.environment }}
    - name: Get deployment status
      shell: bash
      if: success()
      run: echo "::set-output name=status::Deployment successful." | sed 's/\\r//g'